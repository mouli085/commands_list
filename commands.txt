commands:
1.git config --global http.proxy https://172.16.200.1:3128 (configuring proxy network if any)
  git config --global http.proxy http://172.16.200.1:3128

2.git config --global user.name "mouli085" (configuring persons using the repository ,without --global flag settings will only apply to the current repository that are currently in)
  git config --global user.email "ttmouli@gmail.com"

3.git init (intializing git repository)

4.ls (shows list of all files excluding hidden files in the folder)
  ls -la (shows list of all files including hidden files in the folder)
  ls -la .git (shows list of all files including hidden files in the git directory)

5.git add first_file.txt (adds only this file, willbe written  as file name with extention)
  git add . (adds all files)

6.git commit -m "message1" (records the changes to file which has already been added)
  git commit -m "message2" first-file.txt ( records only one file where several files have been added)
  git commit -am "message3" (records all files already been added)
  git commit --amend -m "message" (records the changes to file which has already been added and Replace the tip of the current branch by creating a new commit)
  
7.git status [ status of working directory ,if there any untracked files or it is cleam]

8.git log [gives information about all commits]
  git log --pretty=oneline[shows commit history in oneline. commits hash address is full]
  git log --oneline[shows commit history in oneline. commits hash address isnot full]
  git log --follow file_name[Lists version history for a file, including renames]

9.git diff [differentiate between old version of git and new version of git]
  git diff file_name.txt [ differentiate between old version and new version of a specific file]
  git diff -- staged[Shows file differences between staging and the last file version]
  git diff first-branch...second-branch[Shows content differences between two branches]

10.git branch [shows the branchs in the git]
   git branch branch_name[creates a branch named branch_name]
   git branch -m old_branch_name new_branch_name [renaming old branch'name to new branch's name]
   git branch -d branch_name[delete local branch]
   git branch -D branch_name[forcefully delete a branch If the branch has not been fully merged with an upstream branch, or in HEAD if there is no upstream]
   
11.git merge branch_name [Combines bookmark’s branch into current local branch]
   git merge --no-ff branch_name [merge to always create a merge commit instead of fast forwarding]

12.git checkout branch_name [allows to check out and switches to desired branch.]
   git checkout file_name.txt [gets the file mentioned ]
   git checkout -b new_branch_name [at first creates new branch then switches]
   git checkout -b new_branch_name branch_name [at first creates new branch depending on a existing branch then switches] 

13.git reset commit_id[Undoes all commits afer [commit], preserving changes locally]
   git reset HEAD file_name.txt[reset change before commit after adding,unstage change then changes canbe removed using checkout that file]
   git reset --hard commit_address [Discards all history and changes back to the specified commit]

14 git push origin master[pushing a branch into online repository from local repository to synchronize]
   git push origin --delete branch_name[delete branch of working directory]
   git pull origin master[pulling a branch from online repository into local repository to synchronize] 
   git push -u alias branchname [pushes the branch to remote branch (example git push -u origin branch)]

15.git clone <url> [The clone command will create a copy of the repository on your local machine]
   git clone <url> mylibgit[That command does the same thing as the previous one, but the target directory is called mylibgit]

16.git rm --cached file_name[Removes the file from version control but preserves the file locally]
   git rm file_name[Deletes the file from the working directory and stages the deletion]

17.git marge branch_name[Combines the specified branch’s history into the current branch]

18.git remote add <name> <url>[add a remote repository]
   git remote [view list of remote repository]
   git remote set-url <name> <newurl>[Change the address of an existing pre-configured remote repository in my local repository]
   git remote rename <old_name> <new_name>[Change the name of an existing pre-configured remote repository in my local repository]
   
19.git show <commit id>[ view a commit detail]

20.git clean / git clean -f[Remove untracked files from working tree]
   git clean -n[only show the files that will be removed]
   git clean -x[however, the files listed under .gitignore will be removed from the working tree]

21.cat .git/config[see which branch tracking which]
   cat file_name[see full file]

22.git help[shows many basic git commands]



